/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gladoctorGui;
import gladoctor.*;
/**
 *
 * @author ste
 */
public class ExaminationPanel extends javax.swing.JPanel {

    /**
     * Creates new form Examination
     */
    public ExaminationPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notes = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        errLabel2 = new javax.swing.JLabel();
        bMonth = new javax.swing.JTextField();
        bYear = new javax.swing.JTextField();
        bDay = new javax.swing.JTextField();
        docName = new javax.swing.JTextField();
        patName = new javax.swing.JTextField();
        disList = new javax.swing.JComboBox();
        modEx = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        backToMain = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jLabel1.setText("Cod.  medico:");

        jLabel2.setText("Cod. paziente:");

        jLabel4.setText("Patologia riscontrata:");

        jLabel5.setText("Data:");

        notes.setColumns(20);
        notes.setRows(5);
        jScrollPane1.setViewportView(notes);

        jLabel6.setText("Note:");

        errLabel2.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        errLabel2.setForeground(new java.awt.Color(255, 3, 0));
        errLabel2.setText("ERRORE");
        errLabel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 2, true));

        disList.setModel(new javax.swing.DefaultComboBoxModel());

        modEx.setText("Continua ->");
        modEx.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveEx1(evt);
            }
        });

        jSeparator6.setOrientation(javax.swing.SwingConstants.VERTICAL);

        backToMain.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        backToMain.setText("<- Indietro");
        backToMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backToMR(evt);
            }
        });

        jLabel3.setText("Procedere per aggiungere ricette ed allegati.");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel7.setText("Nuova visita");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addComponent(errLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(backToMain)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(modEx))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(patName, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(disList, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(docName, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(bDay, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(bMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(bYear, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 422, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(bYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(docName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(disList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backToMain)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modEx, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(errLabel2)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void disableFields(){
        bDay.setEditable(false);
        bMonth.setEditable(false);
        bYear.setEditable(false);
        docName.setEditable(false);
        patName.setEditable(false);
    }
    /*private void enableFields(){  *******************************
        bDay.setEditable(true);
        bMonth.setEditable(true);
        bYear.setEditable(true);
        docName.setEditable(true);
        patName.setEditable(true);
        disList.setEditable(true);
        notes.setEditable(true);

    }*/
    public void initNew(){  //Apri una nuova visita da riempire
        doResetEx();
        MainPanel.currEx = MainPanel.medrec.getMainBoard().createExamination();
        if (MainPanel.currEx != null){
            bDay.setDocument (new JTextFieldLimit(2));
            bMonth.setDocument (new JTextFieldLimit(2));
            bYear.setDocument (new JTextFieldLimit(4));
            docName.setDocument (new JTextFieldLimit(16));
            patName.setDocument (new JTextFieldLimit(16));
            docName.setText(SystemController.currentUser.getFiscalCode() );	//Name()+" "+SystemController.currentUser.getSurname());
            patName.setText(MainPanel.medrec.getDataSheet().getFiscalCode() );	//Name()+" "+MainPanel.medrec.getDataSheet().getSurname());
            String date[] = MainPanel.currEx.getDate().split("-");
            bDay.setText(date[2]);
            bMonth.setText(date[1]);
            bYear.setText(date[0]);
            notes.setText("Inserisci qui le tue note.");
            disableFields();
            loadCronDisList();
            //TODO carica lista malattie selezionandone nessuna
        }
    }
    
    private void loadCronDisList(){ //carica la lista generica di malattie
        disList.removeAllItems();
        String[] temp = MainPanel.medrec.getMainBoard().listDiseases(); //TODO: mettere il controllo d'errore ogni volta che si fanno chiamate del genere!!! E controllare che non ci siano valori nulli che vengono fuori dagli strati bassi del programma
        for(int i=0; i<temp.length; i++){
            disList.addItem(makeObj(temp[i]));
        }
        disList.repaint();
    }
    
   /* public void init(int id){     //Apri una visita già esistente**************************
        doResetEx();
        disableFields();
        MainPanel.currEx = MainPanel.medrec.getMainBoard().getExaminationById(id);
        if (MainPanel.currEx != null){
            docName.setText(MainPanel.currEx.getDoctor());
            patName.setText(MainPanel.currEx.getPatient());
            String date[] = MainPanel.currEx.getDate().split("-");
            bDay.setText(date[2]);
            bMonth.setText(date[1]);
            bYear.setText(date[0]);
            notes.setText(MainPanel.currEx.getNotes());
            loadDisList();
        }
    }*/
    
    public void doResetEx(){
        errLabel2.setVisible(false);
        docName.setText("");
        patName.setText("");
        bDay.setText("");
        bMonth.setText("");
        bYear.setText("");
        notes.setText("");
    }
    
    /*private void doExamMod(){
        enableFields();
        modEx.setText("Salva modifiche");                            //Cambia testo pulsante
        modEx.setFont(new java.awt.Font("Ubuntu", 1, 15));           //e stile
        modEx.removeMouseListener(modEx.getMouseListeners()[0]);     //Cambia evento associato
        modEx.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveEx(evt);
            }
        });
        modEx.repaint();
        modEx.revalidate();
    }*/
    
    private void doSaveNewEx(){
        int id;
        
        if( docName.getText().length() == 16 && patName.getText().length() == 16 && bYear.getText().length() > 0 &&
                bMonth.getText().length() > 0 && bDay.getText().length() > 0 ){
            MainPanel.currEx.setDoctor(docName.getText());
            MainPanel.currEx.setPatient(patName.getText());
            MainPanel.currEx.setDate(bYear.getText()+"-"+bMonth.getText()+"-"+bDay.getText());
            
            if (notes.getText().equals("Inserisci qui le tue note.")) MainPanel.currEx.setNotes("-");
            else MainPanel.currEx.setNotes(notes.getText());
            
            MainPanel.currEx.setDisease(disList.getSelectedItem().toString());
            id = MainPanel.currEx.sendData();
            
            if( id == -1 ) GuiController.taskFail(errLabel2);
            else{
                MainPanel.currEx.setID(id);
                GuiController.showAttPanel();
            }
        }
    }
    
    private void doBackToMR(){
        doResetEx();
        MainPanel.currEx = null;
        GuiController.showMRPanel();
    }
    
    private Object makeObj(final String item){
            return new Object() {@Override
            public String toString() { return item; } };
        }
    
    private void saveEx1(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveEx1
        doSaveNewEx();
    }//GEN-LAST:event_saveEx1

    private void backToMR(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backToMR
        doBackToMR();
    }//GEN-LAST:event_backToMR

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bDay;
    private javax.swing.JTextField bMonth;
    private javax.swing.JTextField bYear;
    private javax.swing.JButton backToMain;
    private javax.swing.JComboBox disList;
    private javax.swing.JTextField docName;
    private javax.swing.JLabel errLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JButton modEx;
    private javax.swing.JTextArea notes;
    private javax.swing.JTextField patName;
    // End of variables declaration//GEN-END:variables
}
